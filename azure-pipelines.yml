# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  name: Default 

variables:
  varTemplateFile: './fortigate/main.bicep'
  varParameterFile: './fortigate/parameters/parameters.bicepparam'
  varDeploymentName: 'fortigate-deployment'
  varLocation: 'switzerlandnorth'
  varResourceGroupName: 'pipeline-test'

steps:
#- task: AzureCLI@2
#  displayName: Azure CLI
#  inputs:
#    azureSubscription: 'SVCConnectionConnectivitySub'
#    scriptType: 'ps'
#    scriptLocation: 'inlineScript'
#    inlineScript: |
#      az --version
#      az account show

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
    # Step 1: Create a new Resource Group
    $resourceGroupName = "RG-costs-dont-matter1"
    $location = "switzerlandnorth" # e.g., "East US"
    $resourceGroup = Get-AzResourceGroup -Name $resourceGroupName -ErrorAction SilentlyContinue
    if (-not $resourceGroup) {
    New-AzResourceGroup -Name $resourceGroupName -Location $location
    Write-Host "Created new resource group: $resourceGroupName"
} else {
    Write-Host "Resource group $resourceGroupName already exists. Proceeding with script."
}

# Step 2: Create a new Key Vault
$keyVaultName = "networkingKeyvault"
$keyVault = Get-AzKeyVault -VaultName $keyVaultName -ResourceGroupName $resourceGroupName -ErrorAction SilentlyContinue
if (-not $keyVault) {
    New-AzKeyVault -Name $keyVaultName -ResourceGroupName $resourceGroupName -Location $location -EnabledForTemplateDeployment
    Write-Host "Created new Key Vault: $keyVaultName with enabledForTemplateDeployment set to true."
} else {
    Write-Host "Key Vault $keyVaultName already exists. Proceeding with script."
    # Ensure enabledForTemplateDeployment is set to true
    Set-AzKeyVaultAccessPolicy -VaultName $keyVaultName -EnabledForTemplateDeployment -EnabledForDeployment
    Write-Host "Set -EnabledForTemplateDeployment and -EnabledForDeployment to true for existing Key Vault."
}


# Step 3: Add a random secret to the Key Vault
$secretName = "FortigateAdminPassword"
$randomPassword = -join ((33..126) * 100 | Get-Random -Count 21 | ForEach-Object {[char]$_})
$secureStringPassword = ConvertTo-SecureString $randomPassword -AsPlainText -Force
Set-AzKeyVaultSecret -VaultName $keyVaultName -Name $secretName -SecretValue $secureStringPassword
Write-Host "Added secret to Key Vault."